}
Nrespondents
nrs
Ngroup
simdata=gen_data_wrapper(Nrespondents=nrs[itrial],
Nquestions=nqs[itrial],
Nskill=Nskill,
Ntime=Ntime,
Ngroup=Ngroup,
Nrespcov,
Ngroupcov)
Nprofile=2^Nskill
group_assignments=map(1:Ngroup,function(i) rep(i,ceiling(Nrespondents/Ngroup)))%>%
{do.call(c,.)}%>%.[1:Nrespondents]
Q=gen_profile_list(Nprofile)%>%.[-1]%>%
{do.call(rbind,lapply(.,function(x)
do.call(rbind,lapply(1:ceiling(Nquestions/(Nprofile-1)),function(i) x))))%>%
.[1:Nquestions,]}
respondent_designmat=cbind(rep(1,Nrespondents),
matrix(rnorm(Nrespondents*Ngroup,sd=.2),
Nrespondents,Nrespcov))
group_designmat=cbind(rep(1,Ngroup),
matrix(rnorm(Ngroup*Ngroupcov,sd=.2),
Ngroup,Ngroupcov))
true_params=gen_initial_values_longitudinal(Nrespondents,Q,
Ngroup=2,seed=myseed,
Nrespcov=Nrespcov,
Ngroupcov=Ngroupcov)
simulate_cdm_data(Nrespondents=Nrespondents,
Nquestions=Nquestions,
Nskill=Nskill,
Ntime=Ntime,
Ngroup=Ngroup,
group_assignments=group_assignments,
seed=myseed,
true_params=true_params,
Q=Q,
respondent_designmat=respondent_designmat,
group_designmat=group_designmat)
Nrespondents
Nrespondents=nrs[itrial]
Nquestions=nqs[itrial]
Nrespondents=nrs[itrial]
Nquestions=nqs[itrial]
simdata=gen_data_wrapper(Nrespondents=Nrespondents,
Nquestions=Nquestions,
Nskill=Nskill,
Ntime=Ntime,
Ngroup=Ngroup,
Nrespcov,
Ngroupcov)
Nrespondents
nrs
itrial
ntrials=4
nrs=seq(10,20,by=4)
nqs=seq(4,20,by=2)
ntotal=nrs*nqs*Ntime
nrs=seq(10,20,by=4)
nqs=seq(4,20,by=2)
ntotal=nrs*nqs*Ntime
M=100
for(itrial in 1:ntrials){
for(method in methods){
Nrespondents=nrs[itrial]
Nquestions=nqs[itrial]
simdata=gen_data_wrapper(Nrespondents=Nrespondents,
Nquestions=Nquestions,
Nskill=Nskill,
Ntime=Ntime,
Ngroup=Ngroup,
Nrespcov,
Ngroupcov)
t=system.time({
results=fitfun[[method]](simdata$Xdata,simdata$true_params,M)
})
time_list[[method]][itrial]=t[1]
}
}
Nrespondents
ntrials
ntrials=length(ntotal)
ntotal
time_list=list(mcmc=rep(NA,ntrials),
vl=rep(NA,ntrials),
vp=rep(NA,ntrials))
M=2000
methods=c('mcmc','vl','vp')
fitfun=list(mcmc=mcmc_sampler_main,
vl=variational_fit_logistic,
vp=variational_fit_probit)
ntrials=length(ntotal)
nrs=seq(10,20,by=4)
nqs=seq(4,20,by=2)
ntotal=nrs*nqs*Ntime
ntotal
nrs
nqs
ntrials=4
nrs=round(seq(10,20,length=ntrials))
ntrials=4
nrs=round(seq(10,40,length=ntrials))
nqs=round(seq(4,20,length=ntrials))
ntotal=nrs*nqs*Ntime
ntrials=length(ntotal)
M=100
for(itrial in 1:ntrials){
for(method in methods){
Nrespondents=nrs[itrial]
Nquestions=nqs[itrial]
simdata=gen_data_wrapper(Nrespondents=Nrespondents,
Nquestions=Nquestions,
Nskill=Nskill,
Ntime=Ntime,
Ngroup=Ngroup,
Nrespcov,
Ngroupcov)
t=system.time({
results=fitfun[[method]](simdata$Xdata,simdata$true_params,M)
})
time_list[[method]][itrial]=t[1]
}
}
mcmc_sampler_main
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
fitfun=list(mcmc=function(x,y) mcmc_sampler_main(x,y,M),
vs=function(x,y) vari)
fitfun=list(mcmc=function(x,y) mcmc_sampler_main(x,y,M),
vs=function(x,y) variational_fit(x,y,g=pnorm))
ntrials=4
nrs=round(seq(10,40,length=ntrials))
nqs=round(seq(4,20,length=ntrials))
ntotal=nrs*nqs*Ntime
ntrials=length(ntotal)
ntotal
ntrials=4
nrs=round(seq(10,40,length=ntrials))
nqs=round(seq(4,20,length=ntrials))
ntotal=nrs*nqs*Ntime
require(tidyverse)
devtools::load_all()
###small data version
Ngroup=2
Ntime=2
myseed=2171506
Nskill=2
Nrespcov=2
Ngroupcov=2
Nrespondents=10
Nquestions=4
time_list=list(mcmc=rep(NA,ntrials),
vs=rep(NA,ntrials))
M=2000
methods=c('mcmc','variational_simple')
fitfun=list(mcmc=function(x,y) mcmc_sampler_main(x,y,M),
vs=function(x,y) variational_fit(x,y,g=pnorm))
ntrials=4
nrs=round(seq(10,40,length=ntrials))
nqs=round(seq(4,20,length=ntrials))
ntotal=nrs*nqs*Ntime
ntrials=length(ntotal)
M=100
for(itrial in 1:ntrials){
for(method in methods){
Nrespondents=nrs[itrial]
Nquestions=nqs[itrial]
simdata=gen_data_wrapper(Nrespondents=Nrespondents,
Nquestions=Nquestions,
Nskill=Nskill,
Ntime=Ntime,
Ngroup=Ngroup,
Nrespcov,
Ngroupcov)
t=system.time({
results=fitfun[[method]](simdata$Xdata,simdata$true_params,M)
})
time_list[[method]][itrial]=t[1]
}
}
for(itrial in 1:ntrials){
for(method in methods){
Nrespondents=nrs[itrial]
Nquestions=nqs[itrial]
simdata=gen_data_wrapper(Nrespondents=Nrespondents,
Nquestions=Nquestions,
Nskill=Nskill,
Ntime=Ntime,
Ngroup=Ngroup,
Nrespcov,
Ngroupcov)
t=system.time({
results=fitfun[[method]](simdata$Xdata,simdata$true_params)
})
time_list[[method]][itrial]=t[1]
}
}
methods
fitfun=list(mcmc=function(x,y) mcmc_sampler_main(x,y,M),
variational_simple=function(x,y) variational_fit(x,y,g=pnorm))
ntrials=4
nrs=round(seq(10,40,length=ntrials))
nqs=round(seq(4,20,length=ntrials))
ntotal=nrs*nqs*Ntime
ntrials=length(ntotal)
M=100
for(itrial in 1:ntrials){
for(method in methods){
Nrespondents=nrs[itrial]
Nquestions=nqs[itrial]
simdata=gen_data_wrapper(Nrespondents=Nrespondents,
Nquestions=Nquestions,
Nskill=Nskill,
Ntime=Ntime,
Ngroup=Ngroup,
Nrespcov,
Ngroupcov)
t=system.time({
results=fitfun[[method]](simdata$Xdata,simdata$true_params)
})
time_list[[method]][itrial]=t[1]
}
}
time_list
do.call(rbind,time_list)
do.call(rbind,time_list)
bind_rows(time_list)
bind_rows(time_list)%>%
pivot_longer()
bind_rows(time_list)%>%
mutate(i=i())
bind_rows(time_list)%>%
mutate(i=1:n())
bind_rows(time_list)%>%
mutate(i=1:n())%>%
pivot_longer(i)
help(pivot_longer)
bind_rows(time_list)%>%
mutate(i=1:n())%>%
pivot_longer(everything())
bind_rows(time_list)%>%
mutate(i=1:n())%>%
pivot_longer(!i)
bind_rows(time_list)%>%
mutate(i=1:n())%>%
pivot_longer(!i,values_to='time')
ggplot()+
geom_point(aes(x=i,y=time,col=method))
bind_rows(time_list)%>%
mutate(i=1:n())%>%
pivot_longer(!i,values_to='time',names_to='method')
bind_rows(time_list)%>%
mutate(i=1:n())%>%
pivot_longer(!i,values_to='time',names_to='method')%>%
ggplot()+
geom_point(aes(x=i,y=time,col=method))
time_list[['n']]=ntotal[itrial]
for(method in methods){
Nrespondents=nrs[itrial]
Nquestions=nqs[itrial]
simdata=gen_data_wrapper(Nrespondents=Nrespondents,
Nquestions=Nquestions,
Nskill=Nskill,
Ntime=Ntime,
Ngroup=Ngroup,
Nrespcov,
Ngroupcov)
t=system.time({
results=fitfun[[method]](simdata$Xdata,simdata$true_params)
})
time_list[[method]][itrial]=t[1]
}
time_list
timelist[['n']]=ntotal
time_list[['n']]=ntotal
bind_rows(time_list)%>%
mutate(i=1:n())%>%
pivot_longer(!i,values_to='time',names_to='method')%>%
ggplot()+
geom_point(aes(x=i,y=time,col=method))
bind_rows(time_list)
bind_rows(time_list)%>%
pivot_longer(!n,values_to='time',names_to='method')%>%
ggplot()+
geom_point(aes(x=i,y=time,col=method))
bind_rows(time_list)%>%
pivot_longer(!n,values_to='time',names_to='method')%>%
ggplot()+
geom_point(aes(x=n,y=time,col=method))
bind_rows(time_list)%>%
pivot_longer(!n,values_to='time',names_to='method')%>%
rename(ntotal='n')
bind_rows(time_list)%>%
pivot_longer(!n,values_to='time',names_to='method')%>%
rename(ntotal='n')+
ggplot()+
geom_point(aes(x=ntotal,y=time,col=method))
bind_rows(time_list)%>%
pivot_longer(!n,values_to='time',names_to='method')%>%
rename(ntotal='n')
bind_rows(time_list)%>%
pivot_longer(!n,values_to='time',names_to='method')%>%
rename(ntotal='n')%>%
ggplot()+
geom_point(aes(x=ntotal,y=time,col=method))
source("~/Dropbox/MJProjects/CogDiagModels/cdmfits/R/fit_variational.R")
M=10000
methods=c('mcmc','varprobit_simple')
fitfun=list(mcmc=function(x,y) mcmc_sampler_main(x,y,M),
varprobit_simple=function(x,y) variational_fit(x,y,g=pnorm))
ntrials=4
nrs=round(seq(10,40,length=ntrials))
nqs=round(seq(4,20,length=ntrials))
ntotal=nrs*nqs*Ntime
ntrials=length(ntotal)
M=100
time_list[['n']]=ntotal
for(itrial in 1:ntrials){
for(method in methods){
Nrespondents=nrs[itrial]
Nquestions=nqs[itrial]
simdata=gen_data_wrapper(Nrespondents=Nrespondents,
Nquestions=Nquestions,
Nskill=Nskill,
Ntime=Ntime,
Ngroup=Ngroup,
Nrespcov,
Ngroupcov)
t=system.time({
results=fitfun[[method]](simdata$Xdata,simdata$true_params)
})
time_list[[method]][itrial]=t[1]
}
}
bind_rows(time_list)%>%
pivot_longer(!n,values_to='time',names_to='method')%>%
rename(ntotal='n')%>%
ggplot()+
geom_point(aes(x=ntotal,y=time,col=method))
bind_rows(time_list)%>%
pivot_longer(!n,values_to='time',names_to='method')%>%
rename(ntotal='n')%>%
select(mcmc,varprobit_simple)%>%
ggplot()+
geom_point(aes(x=ntotal,y=time,col=method))
bind_rows(time_list)%>%
pivot_longer(!n,values_to='time',names_to='method')%>%
rename(ntotal='n')%>%
select(mcmc,varprobit_simple)%>%
ggplot()+
geom_point(aes(x=ntotal,y=time,col=method))
bind_rows(time_list)%>%
pivot_longer(!n,values_to='time',names_to='method')%>%
rename(ntotal='n')%>%
dplyr::select(mcmc,varprobit_simple)%>%
ggplot()+
geom_point(aes(x=ntotal,y=time,col=method))
bind_rows(time_list)%>%
pivot_longer(!n,values_to='time',names_to='method')%>%
rename(ntotal='n')%>%
dplyr::select('mcmc','varprobit_simple')%>%
ggplot()+
geom_point(aes(x=ntotal,y=time,col=method))
bind_rows(time_list)%>%
pivot_longer(!n,values_to='time',names_to='method')%>%
rename(ntotal='n')%>%
dplyr::select(c(mcmc,varprobit_simple))%>%
ggplot()+
geom_point(aes(x=ntotal,y=time,col=method))
bind_rows(time_list)%>%
pivot_longer(!n,values_to='time',names_to='method')%>%
rename(ntotal='n')%>%
dplyr::select(c('mcmc','varprobit_simple'))%>%
ggplot()+
geom_point(aes(x=ntotal,y=time,col=method))
bind_rows(time_list)%>%
dplyr::select(c('mcmc','varprobit_simple'))%>%
pivot_longer(!n,values_to='time',names_to='method')%>%
rename(ntotal='n')%>%
ggplot()+
geom_point(aes(x=ntotal,y=time,col=method))
bind_rows(time_list)%>%
dplyr::select('mcmc','varprobit_simple')%>%
pivot_longer(!n,values_to='time',names_to='method')%>%
rename(ntotal='n')%>%
ggplot()+
geom_point(aes(x=ntotal,y=time,col=method))
time_list
bind_rows(time_list)%>%
dplyr::select('mcmc','varprobit_simple')%>%
pivot_longer(!n,values_to='time',names_to='method')%>%
rename(ntotal='n')%>%
ggplot()+
geom_point(aes(x=ntotal,y=time,col=method))
bind_rows(time_list)%>%
dplyr::select('mcmc','varprobit_simple')%>%
pivot_longer(!n,values_to='time',names_to='method')%>%
rename(ntotal='n')%>%
ggplot()+
geom_point(aes(x=ntotal,y=time,col=method))
M
time_list$mcmc*100
time_list[['mcmc_10000']]=
time_list$mcmc*100
time_list
bind_rows(time_list)%>%
dplyr::select('mcmc_10000','varprobit_simple','n')%>%
pivot_longer(!n,values_to='time',names_to='method')%>%
rename(ntotal='n')%>%
ggplot()+
geom_point(aes(x=ntotal,y=time,col=method))
M
bind_rows(time_list)%>%
dplyr::select('mcmc_10000','varprobit_simple','n')%>%
pivot_longer(!n,values_to='time',names_to='method')%>%
rename(ntotal='n')%>%
ggplot()+
geom_point(aes(x=ntotal,y=time,col=method))
nrs
nqs
Xdata=simdata$Xdata
Q=simdata$Xdata$Q
q_info=gen_q_info(Q)
devtools::load_all(".")
Xdata=simdata$Xdata
Q=simdata$Xdata$Q
q_info=gen_q_info(Q)
require(tidyverse)
devtools::load_all()
###small data version
Ngroup=2
Ntime=2
myseed=2171506
Nskill=2
Nrespcov=2
Ngroupcov=2
Nrespondents=10
Nquestions=4
time_list=list(mcmc=rep(NA,ntrials),
vs=rep(NA,ntrials))
M=10000
methods=c('mcmc','varprobit_simple')
fitfun=list(mcmc=function(x,y) mcmc_sampler_main(x,y,M),
varprobit_simple=function(x,y) variational_fit(x,y,g=pnorm))
ntrials=4
nrs=round(seq(10,40,length=ntrials))
nqs=round(seq(4,20,length=ntrials))
ntotal=nrs*nqs*Ntime
ntrials=length(ntotal)
time_list[['n']]=ntotal
for(itrial in 1:ntrials){
for(method in methods){
Nrespondents=nrs[itrial]
Nquestions=nqs[itrial]
simdata=gen_data_wrapper(Nrespondents=Nrespondents,
Nquestions=Nquestions,
Nskill=Nskill,
Ntime=Ntime,
Ngroup=Ngroup,
Nrespcov,
Ngroupcov)
t=system.time({
results=fitfun[[method]](simdata$Xdata,simdata$true_params)
})
time_list[[method]][itrial]=t[1]
}
}
bind_rows(time_list)%>%
dplyr::select('mcmc_10000','varprobit_simple','n')%>%
pivot_longer(!n,values_to='time',names_to='method')%>%
rename(ntotal='n')%>%
ggplot()+
geom_point(aes(x=ntotal,y=time,col=method))
do.call(rbind,time_list)
Xdata=simdata$Xdata
Q=simdata$Xdata$Q
q_info=gen_q_info(Q)
time_list=list(mcmc=rep(NA,ntrials),
vs=rep(NA,ntrials))
M=10000
methods=c('mcmc','varprobit_simple')
fitfun=list(mcmc=function(x,y) mcmc_sampler_main(x,y,M),
varprobit_simple=function(x,y) variational_fit(x,y,g=pnorm))
ntrials=4
nrs=round(seq(10,40,length=ntrials))
nqs=round(seq(4,20,length=ntrials))
ntotal=nrs*nqs*Ntime
ntrials=length(ntotal)
time_list[['n']]=ntotal
ntotal=nrs*nqs*Ntime
ntrials=length(ntotal)
time_list[['n']]=ntotal
for(itrial in 1:ntrials){
for(method in methods){
Nrespondents=nrs[itrial]
Nquestions=nqs[itrial]
simdata=gen_data_wrapper(Nrespondents=Nrespondents,
Nquestions=Nquestions,
Nskill=Nskill,
Ntime=Ntime,
Ngroup=Ngroup,
Nrespcov,
Ngroupcov)
t=system.time({
results=fitfun[[method]](simdata$Xdata,simdata$true_params)
})
time_list[[method]][itrial]=t[1]
}
}
