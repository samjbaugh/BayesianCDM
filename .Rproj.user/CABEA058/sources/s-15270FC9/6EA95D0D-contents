Nrespondents=50
Nquestions=21
#two group assignments
Ngroup=2
Ntime=2
group_assignments=map(1:Ngroup,function(i) rep(i,ceiling(Nrespondents/Ngroup)))%>%
  {do.call(c,.)}%>%.[1:Nrespondents]

#only one dimension
respondent_covariates=rnorm(Nrespondents)
group_covariates=rnorm(Ngroup)

myseed=2171506
Nskill=3
Nprofile=2^Nskill
Q=gen_profile_list(Nprofile)%>%
  {do.call(rbind,lapply(.,function(x)
  do.call(rbind,lapply(1:ceiling(Nquestions/(Nprofile)),function(i) x))))%>%
  .[1:Nquestions,]}


Nrespcov=2
Ngroupcov=2
true_params=gen_initial_values_longitudinal(Nrespondents,Q,Ngroup=2,seed=myseed,
                                            Nrespcov=Nrespcov,Ngroupcov=Ngroupcov)

respondent_designmat=cbind(rep(1,Nrespondents),matrix(rnorm(Nrespondents*Ngroup,sd=.2),Nrespondents,Nrespcov))
group_designmat=cbind(rep(1,Ngroup),matrix(rnorm(Nrespondents*Ngroup,sd=.2),Ngroup,Ngroupcov))

Xdata=simulate_cdm_data(Nrespondents=Nrespondents,
                    Nquestions=Nquestions,
                    Nskill=3,
                    Ntime=2,
                    Ngroup=Ngroup,
                    group_assignments=group_assignments,
                    seed=myseed,
                    true_params=true_params,
                    Q=Q,
                    respondent_covariates=respondent_covariates,
                    group_covariates=group_covariates)





current_parameters=list(

)

##generate data
true_skill_transprob=list(
  'forward'=A,
  'backward'=A
)
